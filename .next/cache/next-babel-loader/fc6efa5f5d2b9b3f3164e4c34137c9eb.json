{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hyungsukkang/website/pages/components/Subscriber.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport MailchimpSubscribe from 'react-mailchimp-subscribe';\nvar url = \"//gmail.us20.list-manage.com/subscribe/post?u=eb8b68104b2215ffa0b951220&amp;id=2deae4b1fb\";\n\nvar Subscriber =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Subscriber, _React$Component);\n\n  function Subscriber() {\n    _classCallCheck(this, Subscriber);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Subscriber).apply(this, arguments));\n  }\n\n  _createClass(Subscriber, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(MailchimpSubscribe, {\n        url: url,\n        render: function render(_ref) {\n          var subscribe = _ref.subscribe,\n              status = _ref.status,\n              message = _ref.message;\n          return __jsx(CustomForm, {\n            status: status,\n            message: message,\n            onValidated: function onValidated(formData) {\n              return subscribe(formData);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 11\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Subscriber;\n}(React.Component);\n\nexport { Subscriber as default };\n\nvar CustomForm = function CustomForm(_ref2) {\n  var status = _ref2.status,\n      message = _ref2.message,\n      onValidated = _ref2.onValidated;\n  var email;\n\n  var submit = function submit() {\n    return email && email.value.indexOf(\"@\") > -1 && onValidated({\n      EMAIL: email.value\n    });\n  };\n\n  var sub = \"Get InterstateOne testnet updates\";\n  return __jsx(\"div\", {\n    style: {\n      background: \"#808080\",\n      marginLeft: \"10%\",\n      borderRadius: 10,\n      width: \"80%\",\n      padding: 10,\n      display: \"inline-block\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    style: {\n      color: \"#fff\",\n      fontSize: \"16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, status === \"sending\" && \"sending..\" || status === \"error\" && message || status === \"success\" && message || sub), __jsx(\"input\", {\n    style: {\n      width: \"70%\",\n      fontSize: \"12px\",\n      padding: 5\n    },\n    ref: function ref(node) {\n      return email = node;\n    },\n    type: \"email\",\n    placeholder: \"Your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    style: _defineProperty({\n      padding: 5,\n      color: \"#fff\",\n      width: \"56px\",\n      backgroundColor: \"#041D2D\",\n      fontSize: \"14px\"\n    }, \"padding\", 5),\n    onClick: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Submit\"));\n};","map":{"version":3,"sources":["/Users/hyungsukkang/website/pages/components/Subscriber.js"],"names":["React","useState","MailchimpSubscribe","url","Subscriber","subscribe","status","message","formData","Component","CustomForm","onValidated","email","submit","value","indexOf","EMAIL","sub","background","marginLeft","borderRadius","width","padding","display","textAlign","color","fontSize","node","backgroundColor"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,IAAMC,GAAG,GAAG,2FAAZ;;IAEsBC,U;;;;;;;;;;;;;6BACV;AACR,aACI,MAAC,kBAAD;AACI,QAAA,GAAG,EAAED,GADT;AAEI,QAAA,MAAM,EAAE;AAAA,cAAGE,SAAH,QAAGA,SAAH;AAAA,cAAcC,MAAd,QAAcA,MAAd;AAAA,cAAsBC,OAAtB,QAAsBA,OAAtB;AAAA,iBACJ,MAAC,UAAD;AAAY,YAAA,MAAM,EAAED,MAApB;AAA4B,YAAA,OAAO,EAAEC,OAArC;AAA8C,YAAA,WAAW,EAAE,qBAAAC,QAAQ;AAAA,qBAAIH,SAAS,CAACG,QAAD,CAAb;AAAA,aAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI;AAAA,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQA;;;;EAVqCR,KAAK,CAACS,S;;SAAzBL,U;;AAatB,IAAMM,UAAU,GAAG,SAAbA,UAAa,QAAsC;AAAA,MAAnCJ,MAAmC,SAAnCA,MAAmC;AAAA,MAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,MAAlBI,WAAkB,SAAlBA,WAAkB;AACrD,MAAIC,KAAJ;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WACbD,KAAK,IACLA,KAAK,CAACE,KAAN,CAAYC,OAAZ,CAAoB,GAApB,IAA2B,CAAC,CAD5B,IAEAJ,WAAW,CAAC;AACVK,MAAAA,KAAK,EAAEJ,KAAK,CAACE;AADH,KAAD,CAHE;AAAA,GAAf;;AAOA,MAAMG,GAAG,GAAE,mCAAX;AAEA,SACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,SADP;AAELC,MAAAA,UAAU,EAAE,KAFP;AAGLC,MAAAA,YAAY,EAAE,EAHT;AAILC,MAAAA,KAAK,EAAE,KAJF;AAKLC,MAAAA,OAAO,EAAE,EALJ;AAMLC,MAAAA,OAAO,EAAE,cANJ;AAOLC,MAAAA,SAAS,EAAE;AAPN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CpB,MAAM,KAAK,SAAX,IAAwB,WAAxB,IAAuCA,MAAM,KAAK,OAAX,IAAsBC,OAA7D,IAAwED,MAAM,KAAK,SAAX,IAAwBC,OAAhG,IAA2GU,GAA1J,CAXF,EAYE;AACE,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE,KAAT;AAAgBK,MAAAA,QAAQ,EAAE,MAA1B;AAAkCJ,MAAAA,OAAO,EAAE;AAA3C,KADT;AAEE,IAAA,GAAG,EAAE,aAAAK,IAAI;AAAA,aAAKf,KAAK,GAAGe,IAAb;AAAA,KAFX;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,WAAW,EAAC,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAkBE;AAAQ,IAAA,KAAK;AAAIL,MAAAA,OAAO,EAAE,CAAb;AAAgBG,MAAAA,KAAK,EAAE,MAAvB;AAA+BJ,MAAAA,KAAK,EAAE,MAAtC;AAA8CO,MAAAA,eAAe,EAAE,SAA/D;AAA0EF,MAAAA,QAAQ,EAAE;AAApF,kBAAqG,CAArG,CAAb;AAAuH,IAAA,OAAO,EAAEb,MAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,CADF;AAwBD,CAnCH","sourcesContent":["import React, {useState} from 'react'\nimport MailchimpSubscribe from 'react-mailchimp-subscribe'\nconst url = \"//gmail.us20.list-manage.com/subscribe/post?u=eb8b68104b2215ffa0b951220&amp;id=2deae4b1fb\"\n\nexport default class  Subscriber extends React.Component {\n   render() {\n    return  (\n        <MailchimpSubscribe \n            url={url}\n            render={({ subscribe, status, message }) => (\n                <CustomForm status={status} message={message} onValidated={formData => subscribe(formData)} />\n            )}\n        />\n        )\n   }\n}\n\nconst CustomForm = ({ status, message, onValidated }) => {\n    let email\n    const submit = () =>\n      email &&\n      email.value.indexOf(\"@\") > -1 &&\n      onValidated({\n        EMAIL: email.value,\n      });\n\n    const sub= \"Get InterstateOne testnet updates\";\n  \n    return (\n      <div\n        style={{\n          background: \"#808080\",\n          marginLeft: \"10%\",\n          borderRadius: 10,\n          width: \"80%\",\n          padding: 10,\n          display: \"inline-block\",\n          textAlign: \"center\",\n        }}\n      >\n        <h3 style={{color: \"#fff\", fontSize: \"16px\"}}>{status === \"sending\" && \"sending..\" || status === \"error\" && message || status === \"success\" && message || sub}</h3>\n        <input\n          style={{ width: \"70%\", fontSize: \"12px\", padding: 5 }}\n          ref={node => (email = node)}\n          type=\"email\"\n          placeholder=\"Your email\"\n        />\n        <button style={{ padding: 5, color: \"#fff\", width: \"56px\", backgroundColor: \"#041D2D\", fontSize: \"14px\", padding: 5 }} onClick={submit}>\n          Submit\n        </button>\n      </div>\n    );\n  };\n"]},"metadata":{},"sourceType":"module"}
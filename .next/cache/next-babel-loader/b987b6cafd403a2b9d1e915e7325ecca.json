{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hyungsukkang/website/pages/components/Subscriber.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport MailchimpSubscribe from 'react-mailchimp-subscribe';\nvar url = \"//gmail.us20.list-manage.com/subscribe/post?u=eb8b68104b2215ffa0b951220&amp;id=2deae4b1fb\";\n\nvar Subscriber =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Subscriber, _React$Component);\n\n  function Subscriber() {\n    _classCallCheck(this, Subscriber);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Subscriber).apply(this, arguments));\n  }\n\n  _createClass(Subscriber, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(MailchimpSubscribe, {\n        url: url,\n        render: function render(_ref) {\n          var subscribe = _ref.subscribe,\n              status = _ref.status,\n              message = _ref.message;\n          return __jsx(CustomForm, {\n            status: status,\n            message: message,\n            onValidated: function onValidated(formData) {\n              return subscribe(formData);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 11\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Subscriber;\n}(React.Component);\n\nexport { Subscriber as default };\n\nvar CustomForm = function CustomForm(_ref2) {\n  var status = _ref2.status,\n      message = _ref2.message,\n      onValidated = _ref2.onValidated;\n  var email;\n\n  var submit = function submit() {\n    return email && email.value.indexOf(\"@\") > -1 && onValidated({\n      EMAIL: email.value\n    });\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      background: \"#efefef\",\n      borderRadius: 2,\n      padding: 10,\n      display: \"inline-block\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, status === \"sending\" && __jsx(\"div\", {\n    style: {\n      color: \"blue\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"sending...\"), status === \"error\" && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), status === \"success\" && __jsx(\"div\", {\n    style: {\n      color: \"green\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    style: {\n      fontSize: \"2em\",\n      padding: 5\n    },\n    ref: function ref(node) {\n      return email = node;\n    },\n    type: \"email\",\n    placeholder: \"Your email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    style: {\n      fontSize: \"2em\",\n      padding: 5\n    },\n    onClick: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Submit\"));\n};","map":{"version":3,"sources":["/Users/hyungsukkang/website/pages/components/Subscriber.js"],"names":["React","MailchimpSubscribe","url","Subscriber","subscribe","status","message","formData","Component","CustomForm","onValidated","email","submit","value","indexOf","EMAIL","background","borderRadius","padding","display","color","__html","fontSize","node"],"mappings":"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","sourcesContent":["import React from 'react'\nimport MailchimpSubscribe from 'react-mailchimp-subscribe'\nconst url = \"//gmail.us20.list-manage.com/subscribe/post?u=eb8b68104b2215ffa0b951220&amp;id=2deae4b1fb\"\n\nexport default class  Subscriber extends React.Component {\n   render() {\n    return  (\n        <MailchimpSubscribe \n            url={url}\n            render={({ subscribe, status, message }) => (\n                <CustomForm status={status} message={message} onValidated={formData => subscribe(formData)} />\n            )}\n        />\n        )\n   }\n}\n\nconst CustomForm = ({ status, message, onValidated }) => {\n    let email\n    const submit = () =>\n      email &&\n      email.value.indexOf(\"@\") > -1 &&\n      onValidated({\n        EMAIL: email.value,\n      });\n  \n    return (\n      <div\n        style={{\n          background: \"#efefef\",\n          borderRadius: 2,\n          padding: 10,\n          display: \"inline-block\"\n        }}\n      >\n        {status === \"sending\" && <div style={{ color: \"blue\" }}>sending...</div>}\n        {status === \"error\" && (\n          <div\n            style={{ color: \"red\" }}\n            dangerouslySetInnerHTML={{ __html: message }}\n          />\n        )}\n        {status === \"success\" && (\n          <div\n            style={{ color: \"green\" }}\n            dangerouslySetInnerHTML={{ __html: message }}\n          />\n        )}\n        <br />\n        <input\n          style={{ fontSize: \"2em\", padding: 5 }}\n          ref={node => (email = node)}\n          type=\"email\"\n          placeholder=\"Your email\"\n        />\n        <br />\n        <button style={{ fontSize: \"2em\", padding: 5 }} onClick={submit}>\n          Submit\n        </button>\n      </div>\n    );\n  };\n"]},"metadata":{},"sourceType":"module"}
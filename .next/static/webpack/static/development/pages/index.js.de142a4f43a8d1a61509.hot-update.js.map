{"version":3,"file":"static/webpack/static/development/pages/index.js.de142a4f43a8d1a61509.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import styled from 'styled-components'\nimport Subscriber from './components/Subscriber'\nimport Navbar from './components/Navbar'\nimport '../styles/main.css'\nimport Particle from './components/Particle'\nimport Router from \"next/router\"\nimport withGA from \"next-ga\"\nimport Head from \"next/head\"\nimport MediaQuery from 'react-responsive'\n\nconst particlesOptions = {\n    particles: {\n      number: {\n        value: 80,\n        density: {\n          enable: true,\n          value_area: 800\n        }\n      }\n    }\n  };\n\n\nconst index = () => (\n    <Container>\n        <Navbar/>\n        <Content>\n            <Header>Interstate Network is a hybrid layer2 proof-of-stake sidechain designed to scale Ethereum without compromising on security.</Header>\n            <br></br>\n            <h2>Developer Friendly.</h2>\n            <p>No SDK required. Write your code in Solidity as if you're deploying to mainnet.</p>\n            <br></br>\n            <h2>Fully Verifiable.</h2>\n            <p>State-transitions and token transfers are verifiable on mainnet through our generalized fraud proof engine.</p>\n            <br></br>\n            <h2>Links</h2>\n            <p>\n            <a style={{textDecoration: \"underline\"}} href=\"https://vitalik.ca/general/2019/08/28/hybrid_layer_2.html\">The dawn of Hybrid Layer 2 Protocols by Vitalik Buterin</a>\n            </p>\n            <div style={{height: \"40px\"}}></div>\n\n            <Subscriber/>\n        </Content>\n        <Footer>\n            <a href=\"mailto://hello@interstate.network\">\n                <img src=\"/static/interstate.svg\" width=\"128\" height=\"128\" alt=\"Interstate Network\"/>\n            </a>  \n            <ul>\n                <li>\n                    <a href=\"mailto://hello@interstate.network\">Email</a>\n                </li>\n                <li></li>\n                <li></li>\n            </ul>  \n        </Footer> \n\n        <Particle className=\"particles\"/>\n        \n    </Container>\n)\n\nexport default withGA(\"UA-149335263-1\", Router)(index);\n\n\nconst Header = styled.h1`\nfont-size: 40px;\nline-height: 1.2;\n`\n\nconst Container = styled.div`\n.particles {\n    display: none;\n}\n`\n\n\nconst Content = styled.div`\nmargin-top: 20px;\nmargin-left: auto;\nmargin-right: auto;\npadding: 1em;\nmax-width: 832px;\nmin-width: 0;\nwidth: 100%;\nbox-sizing: border-box;\noverflow-wrap: break-word;\nline-height: 2;\n\n\nh2 {\n    font-size: 30px;\n}\n\np {\n    padding: 0 10px;\n}\n`\n\nconst Footer = styled.footer`\nmargin-top: auto;\nmargin-left: auto;\nmargin-right: auto;\npadding: 1em;\nmax-width: 800px;\noverflow-wrap: break-word;\ntext-align: center;\ndisplay: block;\n\nimg {\n    width: 128px;\n    height: auto;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n}\n}\n`"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AADA;AADA;AACA;AAYA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjCA;AACA;AAqCA;AAGA;AAKA;AAOA;AAsBA;;;;A","sourceRoot":""}